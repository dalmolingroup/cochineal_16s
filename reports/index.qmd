---
title: "Cochineal 16S - Preliminary Results"
author:
  - name: Jo√£o Vitor Cavalcante
    orcid: 0000-0001-7513-7376
  - name: Bianca Santiago
    orcid: 0000-0002-8037-6264
  - name: Rodrigo Dalmolin
    orcid: 0000-0002-1688-6155
format: html
bibliography: references.bib
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  echo = FALSE,
  message = FALSE,
  warning = FALSE,
  results = TRUE
)
```

```{r}
library(vroom)
library(dplyr)
library(here)
library(DT)
library(stringr)
library(reactable)
library(ggplot2)
library(pheatmap)
library(tidyr)

make_datatable <- function(data, col_names) {
  data %>%
    datatable(
      .,
      extensions = "Buttons",
      rownames = FALSE,
      escape = FALSE,
      colnames = col_names,
      filter = 'top',
      options = list(
        lengthMenu = c(5, 10, 25, 50, 100),
        pageLength = 5,
        scrollY = 200,
        scroller = TRUE,
        dom = '<"d-flex justify-content-between"lBf>rtip',
        buttons = list(
          'copy',
          list(
            extend = 'collection',
            buttons = c('csv', 'excel'),
            text = 'Download'
          )
        )
      )
    )
}

samples <- c(
  "GRUPO_1_1",
  "GRUPO_1_2",
  "GRUPO_1_3",
  "GRUPO_2_1",
  "GRUPO_2_2",
  "GRUPO_2_3",
  "GRUPO_3_1",
  "GRUPO_3_2",
  "GRUPO_3_3"
)
```

# Methodology

Data was processed with version 2.10.0 of the nf-core/ampliseq pipeline [@straub2020]. The pipeline uses DADA2 [@callahan2016] for Amplicon-sequence variant (ASV) inference, QIIME2 [@bolyen2019] for calculating diversity indices and PICRUSt2 [@douglas2020] for predicting the functional potential of bacteria.

# Results

## Relative Taxonomic Abundance

```{r join-groups, include=FALSE}
library(dplyr)
library(jsonlite)
library(vroom)
library(here)

# Get the list of CSV files in the directory
csv_files <- list.files(here("data/ampliseq_results/qiime2/barplot/"), pattern = "level-.*\\.csv", full.names = TRUE)

# Process each CSV file
for (csv_file in csv_files) {
  # Extract the level number from the filename
  level_number <- gsub(".*level-(\\d+)\\.csv", "\\1", basename(csv_file))

  # Read the CSV file
  abunds <- vroom(csv_file)

  readr::write_csv(abunds, here(paste0("docs/qiime2_relative_abundance/level-", level_number, "_old.csv")))

  # Reformat the data
  reformatted <- abunds |>
    select(-index, index = group) |>
    group_by(index) |>
    summarise(across(everything(), sum)) |>
    ungroup()

  readr::write_csv(reformatted, here(paste0("docs/qiime2_relative_abundance/level-", level_number, ".csv")))

  # Define the columns for the JSONP response
  columns <- names(reformatted)
  bacteria_columns <- columns[-1]  # All columns except 'index'

  # Convert to JSONP format
  jsonp_response <- paste0(
    "load_data(", level_number, ",",
    jsonlite::toJSON(bacteria_columns),
    ",",
    jsonlite::toJSON(columns),
    ",",
    jsonlite::toJSON(reformatted),
    ");"
  )

  # Write the JSONP response to a file
  output_file <- here(paste0("docs/qiime2_relative_abundance/level-", level_number, ".jsonp"))
  writeLines(jsonp_response, output_file)
}
```

The full data for the calculated taxonomic abundance can be interacted with in the following page: <https://dalmolingroup.github.io/cochineal_16s/qiime2_relative_abundance/>. It enables analysis at every taxonomic level, showing the relative frequency of each taxa at that level.

By far the most abundant taxa is *Candidatus Uzinura*, which has been described previously as an endosymbiont in armored scaled insects [@sabree2013].

```{r}
pivotted <- 
abunds |> 
  pivot_longer(!c(index, group), names_to = "taxa", values_to = "rel_abund") |> 
  group_by(group, taxa) |> 
  summarise(abund = sum(rel_abund)) |> 
  ungroup() |> 
  group_by(group) |> 
  mutate(relative_abund = abund / sum(abund)) |>
  ungroup()


other_df <- 
  pivotted |> 
  group_by(group) |> 
  summarise(
    uzinura_abund = sum(relative_abund[grepl("Uzinura", taxa, ignore.case = TRUE)]),
    other_abund = sum(relative_abund[!grepl("Uzinura", taxa, ignore.case = TRUE)])
  ) |> 
  pivot_longer(cols = c(uzinura_abund, other_abund), names_to = "taxa", values_to = "relative_abund") |> 
  mutate(taxa = ifelse(grepl("uzinura", taxa), "Candidatus Uzinura", "Other taxa"))

rel_abund_chart <- ggplot(other_df, aes(y = relative_abund, x = group, fill = taxa)) +
  geom_col() +
  scale_y_continuous(labels = scales::percent_format(), breaks = seq(0, 1, by = 0.2), expand = c(0,0)) +
  scale_fill_manual(values = c("Candidatus Uzinura" = "#009E73", "Other taxa" = "#D55E00")) +
  scale_x_discrete(labels = c("GRUPO_1" = "Group 1", "GRUPO_2" = "Group 2", "GRUPO_3" = "Group 3")) +
  theme_classic() +
  labs(
    x = element_blank(),
    y = "Relative Abundance (%)",
    fill = "Taxon"
  ) +
  theme(legend.text = element_text(face = "italic"))

ggsave(filename = here("results/rel_abund_chart.png"), rel_abund_chart)
ggsave(filename = here("results/rel_abund_chart.tiff"), rel_abund_chart)

rel_abund_chart

vroom::vroom_write(x = pivotted, file = here("results/abundances.tsv"))
```

```{r}
byclass <- pivotted |> 
  filter(!grepl("Candidatus Uzinura", taxa, ignore.case = TRUE)) |> 
  mutate(class = str_split_i(taxa, ";", 2)) |> 
  filter(class != "") |> 
  select(-taxa)

byclass <- byclass |> 
  group_by(group, class) |> 
  summarise(abund = sum(abund)) |> 
  ungroup() |> 
  group_by(group) |> 
  mutate(relative_abund = abund / sum(abund))

rel_abund_chart_no_uzinura <- ggplot(byclass, aes(y = abund, x = group, fill = class)) +
  geom_col() +
  scale_y_continuous(labels = scales::label_comma(), expand = c(0,0)) +
  scale_fill_viridis_d() +
  scale_x_discrete(labels = c("GRUPO_1" = "Group 1", "GRUPO_2" = "Group 2", "GRUPO_3" = "Group 3")) +
  theme_classic() +
  labs(
    x = element_blank(),
    y = "Bacterial read counts",
    fill = "Taxon"
  ) +
  theme(legend.text = element_text(face = "italic"))

ggsave(filename = here("results/abs_abund_chart_no_uzinura.png"), rel_abund_chart_no_uzinura)
ggsave(filename = here("results/abs_abund_chart_no_uzinura.tiff"), rel_abund_chart_no_uzinura)

rel_abund_chart_no_uzinura
```


## Alpha Diversity

The Shannon Diversity Index was calculated for each sample, here presented by the group they were assigned to in the sample name.

```{r}
alpha_div <-
  vroom(
    here(
      "data/ampliseq_results/qiime2/diversity/alpha_diversity/shannon_vector/metadata.tsv"
    ),
    comment = "#"
  )

kruskal_result <- kruskal.test(shannon_entropy ~ group, data = alpha_div)

if (kruskal_result$p.value < 0.05) {
  dunn_result <- dunnTest(Shannon ~ Group, data = df, method = "bonferroni")
  print(dunn_result)
}

library(ggsignif)

ggplot(alpha_div, aes(y = group, x = shannon_entropy)) +
  geom_boxplot() +
  labs(
    y = element_blank(),
    x = "Shannon Index"
  ) +
  scale_y_discrete(labels = c("GRUPO_1" = "Group 1", "GRUPO_2" = "Group 2", "GRUPO_3" = "Group 3")) +
  
  # Add non-significant bars between all group comparisons
  geom_signif(
    comparisons = list(c("GRUPO_1", "GRUPO_2"), 
                       c("GRUPO_2", "GRUPO_3"), 
                       c("GRUPO_1", "GRUPO_3")),
    map_signif_level = TRUE,
    annotations = "ns",
    y_position = c(3.5, 3.7, 3.9), # Adjust these values to position the bars
    tip_length = 0.01
  ) +
  
  # Add the sample size annotation
  annotate(
    "text", 
    x = Inf,          # Position horizontally at the far right
    y = -Inf,         # Position vertically at the bottom
    label = "n=3 per group", 
    hjust = 1.1,      # Adjust horizontal justification (push it left from the edge)
    vjust = -0.5,     # Adjust vertical justification (push it up from the bottom)
    size = 4, 
    fontface = "italic"
  ) +
  
  theme_classic()

ggsave(filename = here("results/alpha_div.png"))
ggsave(filename = here("results/alpha_div.tiff"))
```

## Functional Prediction

Below are the 30 most common pathways in all samples, as predicted by PICRUSt2. Pathway data is from the MetaCyc database [@caspi2018]. Values are the log10 transformed predicted abundances from PICRUSt2.

```{r}
abundance <- vroom::vroom(here("data/ampliseq_results/picrust/METACYC_path_abun_unstrat_descrip.tsv"))

common_paths <- abundance |> 
  rowwise() %>%
  mutate(
    GRUPO_1 = sum(GRUPO_11, GRUPO_12, GRUPO_13),
    GRUPO_2 = sum(GRUPO_21, GRUPO_22, GRUPO_23),
    GRUPO_3 = sum(GRUPO_31, GRUPO_32, GRUPO_33)
  ) |>
  select(-matches(".*\\d{2}$")) |>
  mutate(total_sum = sum(c_across(starts_with("GRUPO_")), na.rm = TRUE)) %>%
  ungroup() |> 
  slice_max(total_sum, n = 30) |> 
  select(-c(pathway, total_sum)) |> 
  tibble::column_to_rownames("description") |>
  select(
    "Group 1" = GRUPO_1,
    "Group 2" = GRUPO_2,
    "Group 3" = GRUPO_3
  ) |> 
  as.matrix()

pheat <- pheatmap(
  log10(common_paths),
  border_color = "white",
  cluster_rows = FALSE,
  cluster_cols = FALSE,
  color = RColorBrewer::brewer.pal(7, "Reds"),
  na_col = "#fafafa",
  fontsize = 10
  # ,main = title
)

pheat
```

# Acknowledgements

We would like to thank NPAD/UFRN for computational resources expended.
